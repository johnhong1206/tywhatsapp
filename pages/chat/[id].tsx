import React, { useEffect, useState } from "react";
import type { NextPage } from "next";
import Head from "next/head";
import dynamic from "next/dynamic";

//firebase.create
import { db } from "../../config/firebase";
import {
  collection,
  query,
  where,
  getDocs,
  onSnapshot,
  getDoc,
  doc,
  orderBy,
  DocumentSnapshot,
  DocumentData,
} from "firebase/firestore";
import { useRecoilState } from "recoil";
import { chatId } from "../../atoms/chatAtoms";

const Sidebar = dynamic(() => import("../../components/Sidebar"));
const ChatScreen = dynamic(() => import("../../components/ChatScreen"));
import { useRouter } from "next/router";
import SidebarModal from "../../components/SidebarModal";
import { sidebarModalState } from "../../atoms/sidebarAtom";
import { createChatModalState } from "../../atoms/createChatModalAtoms";
import CreateChat from "../../components/CreateChat";

const ChatPage: NextPage = () => {
  const router = useRouter();
  const [id] = useRecoilState<string>(chatId);
  const [chat, setChat] = useState<DocumentSnapshot<DocumentData>>();
  const [loading, setLoading] = useState<boolean>(true);
  const [openSidebarModal] = useRecoilState<boolean>(sidebarModalState);
  const [createChatModal] = useRecoilState<boolean>(createChatModalState);

  useEffect(() => {
    if (id === null) {
      router.replace("/");
    }
  });

  useEffect(() => {
    const fetchData = async () => {
      const chatId = id ? (id.toString() as string) : "";
      const result = await getDoc(doc(db, "chats", chatId));
      console.log(result);

      if (result.exists()) {
        console.log("Document data:", result.data());
        setLoading(false);
        setChat(result);
      } else {
        // doc.data() will be undefined in this case
        console.log("No such document!");
      }
    };
    fetchData();
  }, [id]);

  return (
    <div className="max-w-screen max-h-screen overflow-hidden">
      <Head>
        <title>zh Whatsapp</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex flex-row overflow-hidden">
        <Sidebar />
        <ChatScreen chat={chat?.data()} />
      </main>
      {createChatModal && <CreateChat />}

      {openSidebarModal && <SidebarModal />}
    </div>
  );
};

export default ChatPage;
